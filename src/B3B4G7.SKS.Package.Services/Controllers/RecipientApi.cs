/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.22.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using AutoMapper;
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Newtonsoft.Json;
using B3B4G7.SKS.Package.Services.Attributes;
using B3B4G7.SKS.Package.Services.DTOs;
using B3B4G7.SKS.Package.BusinessLogic.Interfaces;
using Microsoft.Extensions.Logging;
using B3B4G7.SKS.Package.BusinessLogic.Interfaces.Exceptions;

namespace B3B4G7.SKS.Package.Services.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RecipientApiController : ControllerBase
    {
        private readonly IMapper _mapper;
        private readonly IRecipientLogic _logic;
        private readonly ILogger<RecipientApiController> _logger;

        public RecipientApiController(IMapper mapper, IRecipientLogic logic, ILogger<RecipientApiController> logger)
        {
            _mapper = mapper;
            _logic = logic;
            _logger = logger;
        }

        /// <summary>
        /// Find the latest state of a parcel by its tracking ID. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Parcel exists, here&#39;s the tracking information.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID.</response>
        [HttpGet]
        [Route("/parcel/{trackingId}")]
        [ValidateModelState]
        [SwaggerOperation("TrackParcel")]
        [SwaggerResponse(statusCode: 200, type: typeof(TrackingInformation), description: "Parcel exists, here&#39;s the tracking information.")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult TrackParcel([FromRoute (Name = "trackingId")][Required][RegularExpression("^[A-Z0-9]{9}$")]string trackingId)
        {
            try
            {
                _logger.LogInformation($"Tracking parcel with tracking ID: {trackingId}");
                BusinessLogic.Entities.Parcel parcelFromBL = _logic.TrackParcel(trackingId);

                TrackingInformation trackingInformation = _mapper.Map<BusinessLogic.Entities.Parcel, TrackingInformation>(parcelFromBL);

                return StatusCode(200, trackingInformation);
            }
            catch (InvalidObjectException ex)
            {
                return StatusCode(400, new Error() { ErrorMessage = ex.Message });
            }
            catch (ParcelNotExistException ex)
            {
                return StatusCode(404, new Error() { ErrorMessage = ex.Message });
            }
            catch (Exception ex)
            {
                return StatusCode(400, new Error() { ErrorMessage = ex.Message });
            }
        }
    }
}
